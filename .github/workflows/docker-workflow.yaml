name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    paths:
      - 'modules/**'
      - '.github/workflows/**'
      - 'docker-compose.yaml'

  pull_request:
    branches:
      - main
    paths:
      - 'modules/**'
      - '.github/workflows/**'
      - 'docker-compose.yaml'

  workflow_dispatch:
    inputs:
      selected_modules:
        description: 'Comma-separated list of modules to build (e.g., ui,auth-service)'
        required: false

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    env:
      IMAGE_PREFIX: abhirambsn/indie-desk
      IMAGE_TAG: latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed for commit diff

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Determine changed modules
        id: changed-modules
        run: |
          echo "Checking manually selected modules..."
          if [ -n "${{ github.event.inputs.selected_modules }}" ]; then
            CHANGED_MODULES="${{ github.event.inputs.selected_modules }}"
          else
            echo "Finding base commit..."
            git fetch origin main
            BASE_SHA=$(git merge-base origin/main HEAD || echo "HEAD~1")
            echo "Comparing changes from $BASE_SHA to HEAD"

            CHANGED_MODULES=$(git diff --name-only "$BASE_SHA" HEAD \
              | grep '^modules/' \
              | cut -d'/' -f2 \
              | sort \
              | uniq \
              | grep -v '^common$' || true)
          fi

          echo "Changed modules:"
          echo "$CHANGED_MODULES"

          echo "CHANGED_MODULES=$CHANGED_MODULES" >> $GITHUB_ENV
          echo "changed_modules=$CHANGED_MODULES" >> $GITHUB_OUTPUT

      - name: Build and Push Docker Images
        if: env.CHANGED_MODULES != ''
        run: |
          IFS=',' read -ra MODULES <<< "$CHANGED_MODULES"
          for module in "${MODULES[@]}"; do
            echo "Building and pushing $module..."
            IMAGE_NAME="${IMAGE_PREFIX}-${module}"

            if [ "$module" = "ui" ]; then
              echo "Passing Syncfusion license for UI module..."
              docker buildx build \
                --push \
                --build-arg SYNCFUSION_LICENSE="${{ secrets.SYNCFUSION_LICENSE }}" \
                --tag "${IMAGE_NAME}:${IMAGE_TAG}" \
                --file "modules/$module/Dockerfile" \
                "."
            else
              docker buildx build \
                --push \
                --tag "${IMAGE_NAME}:${IMAGE_TAG}" \
                --file "modules/$module/Dockerfile" \
                "."
            fi
          done
